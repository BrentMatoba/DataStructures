Static and Dynamic Arrays
Why start here? Arrays are probably the most commonly used data structure.
Arrays are the fundamental building block of all other data structures, so they end up everywhere.
With arrays and pointers alone, you can construct almost any data structure.

Outline:
    1.Discussion and examples about Arrays
        1.1What is an array?
        1.2When and where is an array used?
        1.3Complexity
        1.4Static Array usage example
    2.Dynamic array Implementation details
        2.1 Dynamic Array Source Code
    3.Code implementationÂ 



1.Discussion and Examples:
    1.1What is a static array?
    A static array is af ixed length container containing n elements INDEXABLE from the range [0,n-1].
        Common Q: What is it meant by being "indexable"?
        A: This means that each slot/index in the array can be referenced with a number.
        *continuous address in memory.

    1.2: When and where is an array used?
    Absolutely everywhere, to the point its difficult to make a program without one.

    a.Storing and accessing sequential data
    b. Temporarily storing objects
    c. Used by IO routines as buffers
        Imagine you're working with an extremely large data file, you can feed sections of the data as parts of an array 
        into a data processing program.
    d. Lookuptables and inverse lookup tables
    e. Can be used to return multiple values from a function
        packing/unpacking!
    g. Used in dynamic programming to cache answers to subproblems
        (advanced) knapsack problem, coin change problem
    
    
    1.3 Time Complexity of Array Operations
        Static Array:
            Access: O(1)
            Search: O(n)
            Insertion: N/A
            Appending: N/A
            Deletion: N/A
        
        Dynamic Array:
            Access: O(1)
            Search: O(n)
            Insertion: O(n) O(n) because you hae to potentially shift every single element over, depending on where you insert the new value
            Appending: O(1)
            Deletion: O(n) Same as Insertion, if you delete a certain element, you will potentially have to shift over and rewrite EVERY element.
    

2. How to implement a dynamic array?
    One way is to use a static array!
    a. Create a static array with an initial capacity.
    b. Add elements to the underlying static array, keeping track of the number of elements
    c. If adding another element will exceed the capacity, then create a new static array with twice the capacity
    copy the original elements into it.


