Stack:
    REMARKABLE data structure. One of the author's favorites. 
    Outline:
        1.Discussion about stacks.
            1.1 What is a stack?
            1.2 When and Where is a stack used?
            1.3 Complexity Analysis
            1.4 Stack usage examples.
        2. Implementation Details
            2.1: Pushing elements on stack.
            2.2: Popping elements from stack.
        3. Code implementation.

1. Discussion about stacks
    1.1 What is a stack?
        A stack is a one-ended linear data structure which models a real world stack by having two primary operations, namely push and pop.
        LIFO: Last in first out
            Like a stack of weights!

        pop():Remove top item.
        push():Add item on top of stack.


    1.2 When and where is a Stack used?
        Used by undo mechanisms in text editors.
        Used in compiler syntax checking for matching brackets and braces
        Can be used to model a pile of books or plates.
        Used behind the scenes to support recursion by keeping track of previous function calls.
        Can be used to do a Depth First SearcH (DFS) on a graph.
    
    1.3 Stack Time Complexity:
        Pushing: O(1)
        Popping: O(1)
        Peeking: O(1)
        Searching: O(n)
        Size: O(1)

    1.4 Example: brackets
        Problem: Given a string made up of the following brackets: ()[]{}, determine whether the brackets
        properly match.

        [{}]
        (()())
        {]
        [()]))()
        []{}(){}